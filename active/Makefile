#############################################################################
# Makefile for building: Active
# Generated by qmake (2.01a) (Qt 4.7.3) on: Mon Dec 5 15:46:05 2011
# Project:  active.pro
# Template: app
# Command: /usr/bin/qmake -o Makefile active.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = 
CFLAGS        = -pipe -g -Wall -W $(DEFINES)
CXXFLAGS      = -pipe -g -Wall -W $(DEFINES)
INCPATH       = -I/usr/share/qt/mkspecs/linux-g++ -I. -I. -I../common -I../dispatch -I../threadpool -I../protocol
LINK          = g++
LFLAGS        = -Wl,--hash-style=gnu -Wl,--as-needed
LIBS          = $(SUBLIBS)   -lboost_thread -lprotobuf 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = ../common/Conf.cpp \
		../common/Daemon.cpp \
		../common/Threadpool.cpp \
		../protocol/LogRecord.pb.cpp \
		../dispatch/File.cpp \
		../dispatch/FileService.cpp \
		ActiveLogRecord.cpp \
		Memorypool.cpp \
		Request.cpp \
		Scheduler.cpp \
		Main.cpp 
OBJECTS       = Conf.o \
		Daemon.o \
		Threadpool.o \
		LogRecord.pb.o \
		File.o \
		FileService.o \
		ActiveLogRecord.o \
		Memorypool.o \
		Request.o \
		Scheduler.o \
		Main.o
DIST          = /usr/share/qt/mkspecs/common/g++.conf \
		/usr/share/qt/mkspecs/common/unix.conf \
		/usr/share/qt/mkspecs/common/linux.conf \
		/usr/share/qt/mkspecs/qconfig.pri \
		/usr/share/qt/mkspecs/modules/qt_phonon.pri \
		/usr/share/qt/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt/mkspecs/features/qt_functions.prf \
		/usr/share/qt/mkspecs/features/qt_config.prf \
		/usr/share/qt/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt/mkspecs/features/default_pre.prf \
		/usr/share/qt/mkspecs/features/debug.prf \
		/usr/share/qt/mkspecs/features/default_post.prf \
		/usr/share/qt/mkspecs/features/warn_on.prf \
		/usr/share/qt/mkspecs/features/resources.prf \
		/usr/share/qt/mkspecs/features/uic.prf \
		/usr/share/qt/mkspecs/features/yacc.prf \
		/usr/share/qt/mkspecs/features/lex.prf \
		/usr/share/qt/mkspecs/features/include_source_dir.prf \
		active.pro
QMAKE_TARGET  = Active
DESTDIR       = 
TARGET        = Active

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: active.pro  /usr/share/qt/mkspecs/linux-g++/qmake.conf /usr/share/qt/mkspecs/common/g++.conf \
		/usr/share/qt/mkspecs/common/unix.conf \
		/usr/share/qt/mkspecs/common/linux.conf \
		/usr/share/qt/mkspecs/qconfig.pri \
		/usr/share/qt/mkspecs/modules/qt_phonon.pri \
		/usr/share/qt/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt/mkspecs/features/qt_functions.prf \
		/usr/share/qt/mkspecs/features/qt_config.prf \
		/usr/share/qt/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt/mkspecs/features/default_pre.prf \
		/usr/share/qt/mkspecs/features/debug.prf \
		/usr/share/qt/mkspecs/features/default_post.prf \
		/usr/share/qt/mkspecs/features/warn_on.prf \
		/usr/share/qt/mkspecs/features/resources.prf \
		/usr/share/qt/mkspecs/features/uic.prf \
		/usr/share/qt/mkspecs/features/yacc.prf \
		/usr/share/qt/mkspecs/features/lex.prf \
		/usr/share/qt/mkspecs/features/include_source_dir.prf
	$(QMAKE) -o Makefile active.pro
/usr/share/qt/mkspecs/common/g++.conf:
/usr/share/qt/mkspecs/common/unix.conf:
/usr/share/qt/mkspecs/common/linux.conf:
/usr/share/qt/mkspecs/qconfig.pri:
/usr/share/qt/mkspecs/modules/qt_phonon.pri:
/usr/share/qt/mkspecs/modules/qt_webkit_version.pri:
/usr/share/qt/mkspecs/features/qt_functions.prf:
/usr/share/qt/mkspecs/features/qt_config.prf:
/usr/share/qt/mkspecs/features/exclusive_builds.prf:
/usr/share/qt/mkspecs/features/default_pre.prf:
/usr/share/qt/mkspecs/features/debug.prf:
/usr/share/qt/mkspecs/features/default_post.prf:
/usr/share/qt/mkspecs/features/warn_on.prf:
/usr/share/qt/mkspecs/features/resources.prf:
/usr/share/qt/mkspecs/features/uic.prf:
/usr/share/qt/mkspecs/features/yacc.prf:
/usr/share/qt/mkspecs/features/lex.prf:
/usr/share/qt/mkspecs/features/include_source_dir.prf:
qmake:  FORCE
	@$(QMAKE) -o Makefile active.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/Active1.0.0 || $(MKDIR) .tmp/Active1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/Active1.0.0/ && (cd `dirname .tmp/Active1.0.0` && $(TAR) Active1.0.0.tar Active1.0.0 && $(COMPRESS) Active1.0.0.tar) && $(MOVE) `dirname .tmp/Active1.0.0`/Active1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/Active1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: 

####### Compile

Conf.o: ../common/Conf.cpp ../common/Conf.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Conf.o ../common/Conf.cpp

Daemon.o: ../common/Daemon.cpp ../common/Daemon.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Daemon.o ../common/Daemon.cpp

Threadpool.o: ../common/Threadpool.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Threadpool.o ../common/Threadpool.cpp

LogRecord.pb.o: ../protocol/LogRecord.pb.cpp ../protocol/LogRecord.pb.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o LogRecord.pb.o ../protocol/LogRecord.pb.cpp

File.o: ../dispatch/File.cpp ../common/Daemon.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o File.o ../dispatch/File.cpp

FileService.o: ../dispatch/FileService.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o FileService.o ../dispatch/FileService.cpp

ActiveLogRecord.o: ActiveLogRecord.cpp ActiveLogRecord.hpp \
		../common/Daemon.hpp \
		../protocol/LogRecord.pb.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ActiveLogRecord.o ActiveLogRecord.cpp

Memorypool.o: Memorypool.cpp Memorypool.hpp \
		../common/Daemon.hpp \
		Request.hpp \
		ActiveLogRecord.hpp \
		../protocol/LogRecord.pb.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Memorypool.o Memorypool.cpp

Request.o: Request.cpp Request.hpp \
		ActiveLogRecord.hpp \
		../common/Daemon.hpp \
		../protocol/LogRecord.pb.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Request.o Request.cpp

Scheduler.o: Scheduler.cpp Scheduler.hpp \
		Request.hpp \
		ActiveLogRecord.hpp \
		../common/Daemon.hpp \
		../protocol/LogRecord.pb.hpp \
		ActiveQueue.hpp \
		Memorypool.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Scheduler.o Scheduler.cpp

Main.o: Main.cpp Request.hpp \
		ActiveLogRecord.hpp \
		../common/Daemon.hpp \
		../protocol/LogRecord.pb.hpp \
		Scheduler.hpp \
		ActiveQueue.hpp \
		Memorypool.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Main.o Main.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

