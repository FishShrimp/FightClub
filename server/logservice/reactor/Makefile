#############################################################################
# Makefile for building: Reactor
# Generated by qmake (2.01a) (Qt 4.7.3) on: Tue Dec 6 13:25:04 2011
# Project:  reactor.pro
# Template: app
# Command: /usr/bin/qmake -o Makefile reactor.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = 
CFLAGS        = -pipe -g -Wall -W $(DEFINES)
CXXFLAGS      = -pipe -g -Wall -W $(DEFINES)
INCPATH       = -I/usr/share/qt/mkspecs/linux-g++ -I. -I. -I../common
LINK          = g++
LFLAGS        = -Wl,--hash-style=gnu -Wl,--as-needed
LIBS          = $(SUBLIBS)   -lboost_system -lboost_thread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = EventHandler.cpp \
		Main.cpp \
		Pipe.cpp \
		PipeHandler.cpp \
		Reactor.cpp \
		Epoll.cpp \
		ReactorImpl.cpp \
		Exception.cpp \
		../common/Base64.cpp \
		../common/Daemon.cpp \
		../common/Conf.cpp 
OBJECTS       = EventHandler.o \
		Main.o \
		Pipe.o \
		PipeHandler.o \
		Reactor.o \
		Epoll.o \
		ReactorImpl.o \
		Exception.o \
		Base64.o \
		Daemon.o \
		Conf.o
DIST          = /usr/share/qt/mkspecs/common/g++.conf \
		/usr/share/qt/mkspecs/common/unix.conf \
		/usr/share/qt/mkspecs/common/linux.conf \
		/usr/share/qt/mkspecs/qconfig.pri \
		/usr/share/qt/mkspecs/modules/qt_phonon.pri \
		/usr/share/qt/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt/mkspecs/features/qt_functions.prf \
		/usr/share/qt/mkspecs/features/qt_config.prf \
		/usr/share/qt/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt/mkspecs/features/default_pre.prf \
		/usr/share/qt/mkspecs/features/debug.prf \
		/usr/share/qt/mkspecs/features/default_post.prf \
		/usr/share/qt/mkspecs/features/warn_on.prf \
		/usr/share/qt/mkspecs/features/resources.prf \
		/usr/share/qt/mkspecs/features/uic.prf \
		/usr/share/qt/mkspecs/features/yacc.prf \
		/usr/share/qt/mkspecs/features/lex.prf \
		/usr/share/qt/mkspecs/features/include_source_dir.prf \
		reactor.pro
QMAKE_TARGET  = Reactor
DESTDIR       = 
TARGET        = Reactor

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: reactor.pro  /usr/share/qt/mkspecs/linux-g++/qmake.conf /usr/share/qt/mkspecs/common/g++.conf \
		/usr/share/qt/mkspecs/common/unix.conf \
		/usr/share/qt/mkspecs/common/linux.conf \
		/usr/share/qt/mkspecs/qconfig.pri \
		/usr/share/qt/mkspecs/modules/qt_phonon.pri \
		/usr/share/qt/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt/mkspecs/features/qt_functions.prf \
		/usr/share/qt/mkspecs/features/qt_config.prf \
		/usr/share/qt/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt/mkspecs/features/default_pre.prf \
		/usr/share/qt/mkspecs/features/debug.prf \
		/usr/share/qt/mkspecs/features/default_post.prf \
		/usr/share/qt/mkspecs/features/warn_on.prf \
		/usr/share/qt/mkspecs/features/resources.prf \
		/usr/share/qt/mkspecs/features/uic.prf \
		/usr/share/qt/mkspecs/features/yacc.prf \
		/usr/share/qt/mkspecs/features/lex.prf \
		/usr/share/qt/mkspecs/features/include_source_dir.prf
	$(QMAKE) -o Makefile reactor.pro
/usr/share/qt/mkspecs/common/g++.conf:
/usr/share/qt/mkspecs/common/unix.conf:
/usr/share/qt/mkspecs/common/linux.conf:
/usr/share/qt/mkspecs/qconfig.pri:
/usr/share/qt/mkspecs/modules/qt_phonon.pri:
/usr/share/qt/mkspecs/modules/qt_webkit_version.pri:
/usr/share/qt/mkspecs/features/qt_functions.prf:
/usr/share/qt/mkspecs/features/qt_config.prf:
/usr/share/qt/mkspecs/features/exclusive_builds.prf:
/usr/share/qt/mkspecs/features/default_pre.prf:
/usr/share/qt/mkspecs/features/debug.prf:
/usr/share/qt/mkspecs/features/default_post.prf:
/usr/share/qt/mkspecs/features/warn_on.prf:
/usr/share/qt/mkspecs/features/resources.prf:
/usr/share/qt/mkspecs/features/uic.prf:
/usr/share/qt/mkspecs/features/yacc.prf:
/usr/share/qt/mkspecs/features/lex.prf:
/usr/share/qt/mkspecs/features/include_source_dir.prf:
qmake:  FORCE
	@$(QMAKE) -o Makefile reactor.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/Reactor1.0.0 || $(MKDIR) .tmp/Reactor1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/Reactor1.0.0/ && (cd `dirname .tmp/Reactor1.0.0` && $(TAR) Reactor1.0.0.tar Reactor1.0.0 && $(COMPRESS) Reactor1.0.0.tar) && $(MOVE) `dirname .tmp/Reactor1.0.0`/Reactor1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/Reactor1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: 

####### Compile

EventHandler.o: EventHandler.cpp EventHandler.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o EventHandler.o EventHandler.cpp

Main.o: Main.cpp Reactor.hpp \
		EventHandler.hpp \
		ReactorImpl.hpp \
		Epoll.hpp \
		SocketDef.hpp \
		SocketDef.inl \
		TimerQueue.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Main.o Main.cpp

Pipe.o: Pipe.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Pipe.o Pipe.cpp

PipeHandler.o: PipeHandler.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o PipeHandler.o PipeHandler.cpp

Reactor.o: Reactor.cpp Reactor.hpp \
		EventHandler.hpp \
		ReactorImpl.hpp \
		Epoll.hpp \
		SocketDef.hpp \
		SocketDef.inl \
		TimerQueue.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Reactor.o Reactor.cpp

Epoll.o: Epoll.cpp Exception.hpp \
		Epoll.hpp \
		SocketDef.hpp \
		SocketDef.inl \
		EventHandler.hpp \
		TimerQueue.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Epoll.o Epoll.cpp

ReactorImpl.o: ReactorImpl.cpp EventHandler.hpp \
		ReactorImpl.hpp \
		Epoll.hpp \
		SocketDef.hpp \
		SocketDef.inl \
		TimerQueue.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ReactorImpl.o ReactorImpl.cpp

Exception.o: Exception.cpp Exception.hpp \
		SocketOS.hpp \
		SocketDef.hpp \
		SocketDef.inl
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Exception.o Exception.cpp

Base64.o: ../common/Base64.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Base64.o ../common/Base64.cpp

Daemon.o: ../common/Daemon.cpp ../common/Daemon.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Daemon.o ../common/Daemon.cpp

Conf.o: ../common/Conf.cpp ../common/Conf.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Conf.o ../common/Conf.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

